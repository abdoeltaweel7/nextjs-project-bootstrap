{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/theme-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAC6C;IAChD,qBAAO,6LAAC,mJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC;KALgB","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LanguageProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface LanguageContextType {\n  language: string;\n  setLanguage: (lang: string) => void;\n}\n\nconst LanguageContext = createContext<LanguageContextType>({\n  language: 'en',\n  setLanguage: () => {},\n});\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const { i18n } = useTranslation();\n  const [language, setLanguage] = useState(i18n.language || 'en');\n\n  useEffect(() => {\n    const handleLanguageChange = (lng: string) => {\n      setLanguage(lng);\n      document.documentElement.lang = lng;\n      document.documentElement.dir = lng === 'ar' ? 'rtl' : 'ltr';\n    };\n\n    i18n.on('languageChanged', handleLanguageChange);\n    handleLanguageChange(i18n.language);\n\n    return () => {\n      i18n.off('languageChanged', handleLanguageChange);\n    };\n  }, [i18n]);\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage: changeLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport const useLanguage = () => useContext(LanguageContext);\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;;;AAHA;;;AAUA,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAuB;IACzD,UAAU;IACV,aAAa,KAAO;AACtB;AAEO,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;;IAC1E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD;IAC9B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,QAAQ,IAAI;IAE1D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM;mEAAuB,CAAC;oBAC5B,YAAY;oBACZ,SAAS,eAAe,CAAC,IAAI,GAAG;oBAChC,SAAS,eAAe,CAAC,GAAG,GAAG,QAAQ,OAAO,QAAQ;gBACxD;;YAEA,KAAK,EAAE,CAAC,mBAAmB;YAC3B,qBAAqB,KAAK,QAAQ;YAElC;8CAAO;oBACL,KAAK,GAAG,CAAC,mBAAmB;gBAC9B;;QACF;qCAAG;QAAC;KAAK;IAET,MAAM,iBAAiB,CAAC;QACtB,KAAK,cAAc,CAAC;IACtB;IAEA,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU,aAAa;QAAe;kBACtE;;;;;;AAGP;GA5BgB;;QACG,mKAAA,CAAA,iBAAc;;;KADjB;AA8BT,MAAM,cAAc;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAe;IAA9C","debugId":null}}]
}